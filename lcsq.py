import helpers

def longestCommonSubsequence(text1: str, text2: str) -> int:
        length1 = len(text1)
        length2 = len(text2)
        dp = [[0] * (length2 + 1) for _ in range(length1 + 1)]
        parent = [[None] * (length2 + 1) for _ in range(length1 + 1)]
        for i in range(1, length1 + 1):
            for  j in range(1, length2 + 1):
                if text1[i - 1] == text2[j - 1]:
                    dp[i][j] = dp[i - 1][j - 1] + 1
                    parent[i][j] = (text1[i - 1], (i - 1, j - 1))
                else:
                    if dp[i - 1][j] > dp[i][j - 1]:
                        dp[i][j] = dp[i - 1][j]
                        parent[i][j] = ("", (i - 1, j))
                    else:
                        dp[i][j] = dp[i][j - 1]
                        parent[i][j] = ("", (i, j - 1))
        curr = parent[length1][length2]
        result = ""
        while curr is not None:
            result = curr[0] + result
            curr = parent[curr[1][0]][curr[1][1]]
        print(result)

        return dp[length1][length2]

def solution(input):
     s1, s2 = helpers.parse_fasta(input)[1]
     longestCommonSubsequence(s1, s2)

solution('''>Rosalind_4076
AGTAGGAGCGCAAGGAAGTACCCTCAGACTTCATTGGATGGTCAGGCAAAATGGCGACAC
ACTACAAGCAACGCCATGAAGGAACGTCTTCCAAGAATAAGAGGAATAGACCGACTGGTT
CTGGGACAAAGGGGTCTGGTGGCGGGATGAGGCGTGGACTATAAACGCATAAAACCGCAA
AGGCCGCCGGGACAACGTGACACCTATGTTACAAAACGCTTAAACCAAACCCGGGAATTG
AGACTCAACAGTGACCCCGTCGGTGTACAATTGGTGTGCTGGGCCCTCATAGCGCCCCGA
AGCCCTGCTTTTCTTTTTAGCGTACCCGCTCGCGCGCGCAAGTTAACCTCTCCACTTAAA
GCCGTGTAGCTTGTTGCTCAGTTTCTCTGCTACACAGATCCTCGCGCGGTAAGTGTAAAA
ACATCCGTATCTCGTTCAGGATCTAAACGCGTGCGAGGCGCTTCCTCCATTCCGTATACC
CCTTATGGCTGGTCACCACCTGACGATAATACCAACAAGATACTACTGGTGTGCAGTGCA
CAGGGACTGTTATATGCGCCAAACAACCCTTGCTTGGGAGGACTGTAGTACCTCAGGATT
GGACTCTTCTAACAGGTCCTGTAGAAATGCCCTTTAGCACGATAAGAGTCCCCATATTCT
AAAGATGTGAGCTAAGCACTGCTTAAACACTGGATACTGTCATTCTAACCACGCAAAATG
GCCACTTCCACGACCCCGCGCCGTTTACCATGATCCGGCATGTGGAGACCCTTCGCAACA
CCACTTTTTCTAGCACATAACACCACGAAATCTTCGTGAACCATAGAAGCAGACCGTCGT
GGGGGTGGTCTGAACAAGGACATGTGTGGGTAGGAGCCATCAGGAAGTCTA
>Rosalind_0090
GACTACGTTCCCAACCACTTAAACGGCCTTCACCAAATGGACCGGGATTATGCATGGCTT
AGTCTGCATAGTATAACCCCGTTGCCATTGAGCCCGGGCGGGAACCGCCTGCTGAAGTAC
GCTCCGAGAATTACTCCAGTCTATTAGTGCGACCTCGGGCATAAACAACGTAAAGGTTCA
GGTAAGGAATCCGATTAATAGACGGGGCCCAGATCAGTGATGGTCGCAGCAGAGCGGGCC
ATATAAACAGCCCTATCAGGATCTATTCTTCTAAGCTTCTGGCTGTAAGTCGTGGCGCGC
TGTGTGGAAGAGTAGCGCATTGGCACAATCATATATAAGTAGTGTCAGACCAATCCACTT
ATGCGGGGTAGTAATGGGAATGGATGTGCCCACCACAGTGGAGCGTTATCGCGATAAGCG
GTCGTAGGTTAGCCCTCCTCCTTCCTGCGAGTGCAGTATGCTTCCGTTTCGGTCTCGTTG
AAGAACTCACTTATCCGTTAGGGGAACTACTGCCTATGTAGGATCAGAAACGCTTAGAAT
CGTCACAAATTGTATGGCCCTTGAAGAGGTTCCGGTCTCTATGCCCGAGCGATGGGAAGC
TCATAATCCTTGTCAGAGAAGAGAGCCACACTCGCGGAGGGTGTCAGTAATACAGGCCAG
AGAGCGGCCATTATGTCTGCAGTAACCTAGGTGTCGCCCCCATCCGCTGTTTAGGGAAAA
GTCCACGCTCCTACGACAGCTTCATACGTGCACCAGGTCATCAAGGATGGGTGGTCATTT
AAGTAGAAGCAATTCTAACTTGGAACTAAATCTGGAGAGCTTGCGCAGGCGAGGCCACGC
ATGGACGCGGA''')