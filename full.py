mass_to_aa = {
    71.0371: 'A',
    103.0092: 'C',
    115.0269: 'D',
    129.0426: 'E',
    147.0684: 'F',
    57.0215: 'G',
    137.0589: 'H',
    113.0841: 'L',  # 'I' and 'L' have the same mass, 'L' is kept
    128.0950: 'K',
    131.0405: 'M',
    114.0429: 'N',
    97.0528: 'P',
    128.0586: 'Q',
    156.1011: 'R',
    87.0320: 'S',
    101.0477: 'T',
    99.0684: 'V',
    186.0793: 'W',
    163.0633: 'Y'
}

def solution(masses):
    masses = masses.splitlines()
    fragments = [float(x) for x in masses[1:]]
    fragments.sort()
    n = (len(masses) - 3) / 2
    result = ""
    prev = fragments[0]
    for i in range(1, len(fragments)):
        diff = round(fragments[i] - prev, 4)
        if diff not in mass_to_aa:
            continue
        result += mass_to_aa[diff]
        prev = fragments[i]
        if len(result) == n:
            return result
    print(n)
    print(result)

print(solution('''11679.4315581
397.146609041
498.194289041
525.205189041
626.289249041
638.289249041
754.384209041
785.357659041
869.411149041
886.405339041
997.469729041
1049.46866904
1164.49560904
1183.54903904
1221.51706904
1312.59162904
1377.61817904
1399.62365904
1470.66076904
1527.68222904
1563.69748904
1598.71933904
1691.79244904
1727.76192904
1822.83293904
1893.87004904
1913.84123904
2021.92862904
2099.92054904
2124.93781904
2239.96475904
2285.99985904
2311.00186904
2387.04753904
2408.05462904
2523.08156904
2543.14864904
2614.18575904
2626.09075904
2739.17481904
2770.28686904
2867.26977904
2883.37092904
2996.31236904
3012.41351904
3083.34439904
3141.45610904
3184.39207904
3255.42918904
3288.52451904
3370.45612904
3416.61947904
3533.51945904
3553.67838904
3604.55656904
3716.74171904
3790.63587904
3847.78220904
3918.69445904
3934.81423904
3975.71591904
4088.79997904
4097.87756904
4198.92524904
4216.85855904
4312.00930904
4379.92188904
4426.05223904
4566.00119904
4589.11556904
4694.05977904
4717.17414904
4814.22690904
4822.15473904
4913.29531904
4951.19732904
5050.35422904
5064.28138904
5178.41280904
5211.34979904
5279.46048904
5340.39238904
5392.54454904
5453.47644904
5520.60312904
5554.52412904
5617.65588904
5682.61908904
5730.73994904
5833.74913904
5845.68241904
5948.69160904
5996.81246904
6061.77566904
6124.90742904
6158.82842904
6225.95510904
6286.88700904
6339.03916904
6399.97106904
6468.08175904
6501.01874904
6615.15016904
6629.07732904
6728.23422904
6766.13623904
6857.27681904
6865.20464904
6962.25740904
6985.37177904
7090.31598904
7113.43035904
7253.37931904
7299.50966904
7367.42224904
7462.57299904
7480.50630904
7581.55398904
7590.63157904
7703.71563904
7744.61731904
7760.73709904
7831.64934904
7888.79567904
7962.68983904
8074.87498904
8125.75316904
8145.91209904
8262.81207904
8308.97542904
8390.90703904
8424.00236904
8495.03947904
8537.97544904
8596.08715904
8667.01803904
8683.11918904
8796.06062904
8812.16177904
8909.14468904
8940.25673904
9053.34079904
9065.24579904
9136.28290904
9156.34998904
9271.37692904
9292.38401904
9368.42968904
9393.43169904
9439.46679904
9554.49373904
9579.51100904
9657.50292904
9765.59031904
9785.56150904
9856.59861904
9951.66962904
9987.63910904
10080.712219
10115.734069
10151.749329
10208.770789
10279.807899
10301.813379
10366.839929
10457.914489
10495.882519
10514.935949
10629.962889
10681.961829
10793.026219
10810.020409
10894.073899
10925.047349
11041.142309
11053.142309
11154.226369
11181.237269
11282.284949'''))


